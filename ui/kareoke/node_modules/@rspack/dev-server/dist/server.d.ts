/// <reference types="node" />
/// <reference types="node" />
import { Compiler, MultiCompiler } from "@rspack/core";
import type { Socket } from "net";
import type { FSWatcher } from "chokidar";
import type { Server } from "http";
import WebpackDevServer from "webpack-dev-server";
import type { ResolvedDevServer, DevServer } from "./config";
export declare class RspackDevServer extends WebpackDevServer {
    /**
     * resolved after `normalizedOptions`
     */
    options: ResolvedDevServer;
    staticWatchers: FSWatcher[];
    sockets: Socket[];
    server: Server;
    /** @ts-ignore */
    compiler: Compiler | MultiCompiler;
    webSocketServer: WebpackDevServer.WebSocketServerImplementation | undefined;
    constructor(options: DevServer, compiler: Compiler | MultiCompiler);
    getClientTransport(): string;
    initialize(): Promise<void>;
    private setupDevMiddleware;
    private setupMiddlewares;
}
//# sourceMappingURL=server.d.ts.map