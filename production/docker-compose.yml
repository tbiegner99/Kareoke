version: "3"
volumes:
  kareoke_files:
    external: true
networks:
  kareoke_prod:
    external: true
secrets:
  ha_db_user:
    file: ../secrets/ha_db_user.txt
  ha_db_password:
    file: ../secrets/ha_db_password.txt
services:
  kareoke-ui:
    restart: always
    build:
      context: ../
      dockerfile: production/ui.dockerfile
    environment:
      - VIDEO_PATH=/mnt/kareoke/video
    container_name: "kareoke-ui"
    extra_hosts:
      - "host.docker.internal:172.17.0.1"
    ports:
      - 80:80
    networks:
      - kareoke_prod
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/templates:/etc/nginx/templates
      - kareoke_files:/mnt/kareoke
  kareoke-prod-db:
    image: postgres
    restart: always
    container_name: kareoke-prod-db
    secrets:
      - ha_db_user
      - ha_db_password
    environment:
      POSTGRES_PASSWORD_FILE: "/run/secrets/ha_db_password"
      POSTGRES_USER_FILE: "/run/secrets/ha_db_user"
    networks:
      - kareoke_prod
    ports:
      - "5432:5432"
    volumes:
      - ./db/postgres-data:/var/lib/postgresql/data
  "kareoke":
    restart: always
    build:
      context: ../
      dockerfile: production/backend.dockerfile
    environment:
      - DB_HOST=kareoke-prod-db
      - DB_PORT=5432
      - DB_SCHEMA=kareoke
      - DB_PASSWORD_FILE=/run/secrets/ha_db_password
      - DB_USER_FILE=/run/secrets/ha_db_user
    container_name: kareoke

    networks:
      - kareoke_prod
    secrets:
      - ha_db_user
      - ha_db_password
    ports:
      - "8080"
